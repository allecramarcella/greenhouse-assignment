[{"/Users/marcella/Documents/ironhack /Carreer hack/vacatures/physee/assignment/physee-assignment/front-end/src/index.js":"1","/Users/marcella/Documents/ironhack /Carreer hack/vacatures/physee/assignment/physee-assignment/front-end/src/reportWebVitals.js":"2","/Users/marcella/Documents/ironhack /Carreer hack/vacatures/physee/assignment/physee-assignment/front-end/src/App.js":"3","/Users/marcella/Documents/ironhack /Carreer hack/vacatures/physee/assignment/physee-assignment/front-end/src/components/tomatoesDisplay/TomatoDisplay.js":"4","/Users/marcella/Documents/ironhack /Carreer hack/vacatures/physee/assignment/physee-assignment/front-end/src/services/Data-services.js":"5","/Users/marcella/Documents/ironhack /Carreer hack/vacatures/physee/assignment/physee-assignment/front-end/src/components/productionDisplay/ProductionDisplay.js":"6","/Users/marcella/Documents/ironhack /Carreer hack/vacatures/physee/assignment/physee-assignment/front-end/src/components/temperatureData/TemperatureDisplay.js":"7","/Users/marcella/Documents/ironhack /Carreer hack/vacatures/physee/assignment/physee-assignment/front-end/src/components/soilData/moistureDisplay.js":"8","/Users/marcella/Documents/ironhack /Carreer hack/vacatures/physee/assignment/physee-assignment/front-end/src/components/soilData/phDisplay.js":"9","/Users/marcella/Documents/ironhack /Carreer hack/vacatures/physee/assignment/physee-assignment/front-end/src/components/soilData/PhDisplay.js":"10","/Users/marcella/Documents/ironhack /Carreer hack/vacatures/physee/assignment/physee-assignment/front-end/src/components/soilData/MoistureDisplay.js":"11"},{"size":289,"mtime":1610215140746,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1610188354762,"results":"14","hashOfConfig":"13"},{"size":3209,"mtime":1610451943745,"results":"15","hashOfConfig":"13"},{"size":4586,"mtime":1610442488474,"results":"16","hashOfConfig":"13"},{"size":1072,"mtime":1610442585429,"results":"17","hashOfConfig":"13"},{"size":1477,"mtime":1610443108261,"results":"18","hashOfConfig":"13"},{"size":2674,"mtime":1610448648186,"results":"19","hashOfConfig":"13"},{"size":2134,"mtime":1610451398869,"results":"20","hashOfConfig":"13"},{"size":2164,"mtime":1610451423698,"results":"21","hashOfConfig":"13"},{"size":2169,"mtime":1610452067154,"results":"22","hashOfConfig":"13"},{"size":2134,"mtime":1610451398869,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1llztf8",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},"/Users/marcella/Documents/ironhack /Carreer hack/vacatures/physee/assignment/physee-assignment/front-end/src/index.js",[],["51","52"],"/Users/marcella/Documents/ironhack /Carreer hack/vacatures/physee/assignment/physee-assignment/front-end/src/reportWebVitals.js",[],"/Users/marcella/Documents/ironhack /Carreer hack/vacatures/physee/assignment/physee-assignment/front-end/src/App.js",[],"/Users/marcella/Documents/ironhack /Carreer hack/vacatures/physee/assignment/physee-assignment/front-end/src/components/tomatoesDisplay/TomatoDisplay.js",[],"/Users/marcella/Documents/ironhack /Carreer hack/vacatures/physee/assignment/physee-assignment/front-end/src/services/Data-services.js",[],"/Users/marcella/Documents/ironhack /Carreer hack/vacatures/physee/assignment/physee-assignment/front-end/src/components/productionDisplay/ProductionDisplay.js",[],"/Users/marcella/Documents/ironhack /Carreer hack/vacatures/physee/assignment/physee-assignment/front-end/src/components/temperatureData/TemperatureDisplay.js",["53"],"import React, { Component } from 'react'\n\nimport './TemperatureDisplay.css'\n\n\nexport default class TemperatureDisplay extends Component {\n\n    state = {\n        secondHighestTemp: '',\n        daysWithSecondHighTemp: []\n    }\n\n    componentDidUpdate(prevProps){\n        if(prevProps.environmentData !== this.props.environmentData){\n            this.findSecondHighTemp(this.props.environmentData)\n        }\n    }\n\n    // find the second highest temperature in environment data\n    findSecondHighTemp = (environmentData) => {\n        const tempSortedByHight = environmentData.map(data => {\n            let temperature\n            if(data.data) {\n                temperature = data.data.temperature\n            }\n            return temperature\n        })\n        .sort((a,b) => b - a)\n        .reduce((unique, item) => {\n            return unique.includes(item) ? unique : [...unique, item]\n        }, [])\n\n        const secondHighestTemp = tempSortedByHight[1]\n    \n        this.setState({\n            secondHighestTemp: secondHighestTemp,\n        }, () => this.findDaysSecondHighTemp(secondHighestTemp))\n    }\n\n    // find days with the second highest temperature in environment data\n    findDaysSecondHighTemp = (secondHighestTemp) => {\n        const temperatureData = this.props.environmentData\n\n        const daysSecondHighTemp = temperatureData.filter(data => {\n            if(data.data && data.data.temperature) {\n                return data.data.temperature === secondHighestTemp\n            }\n        })\n        .reduce((unique, item) => {\n            return unique.includes(item.time) ? unique : [...unique, item.time]\n        }, [])\n\n        this.setState({\n            daysWithSecondHighTemp: daysSecondHighTemp,\n        })\n    }     \n  \n\n    render() {\n        const arrDaysSecondHighTemp = this.state.daysWithSecondHighTemp\n        const secondHighestTemp = this.state.secondHighestTemp\n\n        return (\n            <div className='outer-container-temperature'>\n                <h2>Days second highest temperature</h2>   \n                <div className='temperature-info'>\n                    <div>\n                        <p>Second highest temperature: </p>\n                        <h3>{secondHighestTemp} degree</h3> \n                    </div>\n                    <div>\n                    {arrDaysSecondHighTemp.map(date => {\n                        return (\n                            <ul key={date}>\n                                <li>{date}</li>                          \n                            </ul>  \n                            )\n                    })}\n                    </div> \n                </div>    \n            </div>\n        )\n    }\n}\n","/Users/marcella/Documents/ironhack /Carreer hack/vacatures/physee/assignment/physee-assignment/front-end/src/components/soilData/moistureDisplay.js",["54"],"import React, { Component } from 'react'\nimport Chart from 'chart.js'\n\nimport './moistureDisplay.css'\n\n\nexport default class MoistureDisplay extends Component {\n\n    state = {\n        labels: [],\n        moistData: []\n    }\n\n    componentDidUpdate(prevProps){\n        if(prevProps.soilData !== this.props.soilData){\n            this.avageragByDay(this.props.soilData)\n        }\n    }\n\n    avageragByDay = (data) => {\n        const uniqueDays = data.reduce((unique, item) => {\n            return unique.includes(item.time) ? unique : [...unique, item.time]\n        }, [])\n\n        const dataSetPerDay = uniqueDays.map(date => {\n            return  data.filter(data => data.time === date)\n        })\n\n        const moistureDataPerDay = dataSetPerDay.map(dataPerDay => {\n            const moisturePerDay = dataPerDay.map(data =>  {\n                if(data.data) {\n                    return data.data.moisture\n                }\n            })\n            return moisturePerDay\n        })\n\n        const onlyValidMoistureData = moistureDataPerDay.map(x => {\n            const filtered = x.filter(x => x !== undefined)\n            const filtteredArrLenght = filtered.length\n            return filtered.reduce((a, c) => a + c )/filtteredArrLenght\n        })\n        \n        this.setState({\n            moistData: onlyValidMoistureData,\n            labels: uniqueDays\n        }, () => this.setChart())\n    }\n\n    setChart = () => {\n        const ctx = document.getElementById(\"myChart\");\n        new Chart(ctx, {\n          type: \"line\",\n          data: {\n            labels: this.state.labels,\n            datasets: [\n              {\n                label: 'Average moisture level per day',\n                data: this.state.moistData,\n                backgroundColor: '#F5F5F5',\n                borderColor: 'black',\n                borderWidth: 1\n              }\n            ]\n          }\n        });\n    }\n\n    render() {\n        return (\n            <div className='outer-container'>\n                <h2>Soil data - Moisture</h2>\n                 <canvas id=\"myChart\" width=\"400\" height=\"400\" />    \n            </div>\n        )\n    }\n}\n",["55","56"],"/Users/marcella/Documents/ironhack /Carreer hack/vacatures/physee/assignment/physee-assignment/front-end/src/components/soilData/phDisplay.js",["57"],"/Users/marcella/Documents/ironhack /Carreer hack/vacatures/physee/assignment/physee-assignment/front-end/src/components/soilData/PhDisplay.js",["58"],"/Users/marcella/Documents/ironhack /Carreer hack/vacatures/physee/assignment/physee-assignment/front-end/src/components/soilData/MoistureDisplay.js",["59"],"import React, { Component } from 'react'\nimport Chart from 'chart.js'\n\nimport './MoistureDisplay.css'\n\n\nexport default class MoistureDisplay extends Component {\n\n    state = {\n        labels: [],\n        moistData: []\n    }\n\n    componentDidUpdate(prevProps){\n        if(prevProps.soilData !== this.props.soilData){\n            this.avageragByDay(this.props.soilData)\n        }\n    }\n\n    avageragByDay = (data) => {\n        const uniqueDays = data.reduce((unique, item) => {\n            return unique.includes(item.time) ? unique : [...unique, item.time]\n        }, [])\n\n        const dataSetPerDay = uniqueDays.map(date => {\n            return  data.filter(data => data.time === date)\n        })\n\n        const moistureDataPerDay = dataSetPerDay.map(dataPerDay => {\n            const moisturePerDay = dataPerDay.map(data =>  {\n                if(data.data) {\n                    return data.data.moisture\n                }\n            })\n            return moisturePerDay\n        })\n\n        const onlyValidMoistureData = moistureDataPerDay.map(x => {\n            const filtered = x.filter(x => x !== undefined)\n            const filtteredArrLenght = filtered.length\n            return filtered.reduce((a, c) => a + c )/filtteredArrLenght\n        })\n        \n        this.setState({\n            moistData: onlyValidMoistureData,\n            labels: uniqueDays\n        }, () => this.setChart())\n    }\n\n    setChart = () => {\n        const ctx = document.getElementById(\"myChart\");\n        new Chart(ctx, {\n          type: \"line\",\n          data: {\n            labels: this.state.labels,\n            datasets: [\n              {\n                label: 'Average moisture level per day',\n                data: this.state.moistData,\n                backgroundColor: '#F5F5F5',\n                borderColor: 'black',\n                borderWidth: 1\n              }\n            ]\n          }\n        });\n    }\n\n    render() {\n        return (\n            <div className='outer-container'>\n                <h2>Soil data - Moisture</h2>\n                 <canvas id=\"myChart\" width=\"400\" height=\"400\" />    \n            </div>\n        )\n    }\n}\n",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":44,"column":64,"nodeType":"66","messageId":"67","endLine":44,"endColumn":66},{"ruleId":"64","severity":1,"message":"68","line":30,"column":56,"nodeType":"66","messageId":"67","endLine":30,"endColumn":58},{"ruleId":"60","replacedBy":"69"},{"ruleId":"62","replacedBy":"70"},{"ruleId":"64","severity":1,"message":"68","line":30,"column":50,"nodeType":"66","messageId":"67","endLine":30,"endColumn":52},{"ruleId":"64","severity":1,"message":"68","line":28,"column":50,"nodeType":"66","messageId":"67","endLine":28,"endColumn":52},{"ruleId":"64","severity":1,"message":"68","line":30,"column":56,"nodeType":"66","messageId":"67","endLine":30,"endColumn":58},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a value to be returned at the end of arrow function.",["71"],["72"],"no-global-assign","no-unsafe-negation"]